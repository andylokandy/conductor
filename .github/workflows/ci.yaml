name: ci

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: tests / rust ${{ matrix.rust }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { rust: 1.70.0, os: ubuntu-22.04 }
          - { rust: 1.65.0, os: ubuntu-22.04 }
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true

      - name: check
        run: cargo check

      - name: build conductor
        run: cargo build --release
      - name: Upload conductor artifact
        uses: actions/upload-artifact@v2
        with:
          name: conductor
          path: target/release/conductor

      - name: build source_server
        run: cd benches/actual/source_server && cargo build --release

      - name: Upload source_server artifact
        uses: actions/upload-artifact@v2
        with:
          name: source_server
          path: benches/actual/source_server/target/release/source-server

      - name: build dummy_server
        run: cd benches/dummy_control/dummy_server && cargo build --release
      - name: Upload dummy_server artifact
        uses: actions/upload-artifact@v2
        with:
          name: dummy_server
          path: benches/dummy_control/dummy_server/target/release/baseline_server

      - name: test
        run: cargo test

      - name: clean
        run: cargo clean

  benchmarks:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-22.04
    name: Run benchmarks
    needs: build
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Download conductor artifact
        uses: actions/download-artifact@v2
        with:
          name: conductor
          path: target/release

      - name: Download source_server artifact
        uses: actions/download-artifact@v2
        with:
          name: source_server
          path: benches/actual/source_server/target/release

      - name: Download dummy_server artifact
        uses: actions/download-artifact@v2
        with:
          name: dummy_server
          path: benches/dummy_control/dummy_server/target/release

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18


      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.6.0

      - name: Install dependencies
        working-directory: ./benches
        run: pnpm i

      - name: Install k6
        run: |
          sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
          echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install k6

      - name: setup git config
        run: |
          # setup the username and email.
          git config user.name "GitHub Actions CI"
          git config user.email "<>"

      - name: Run benchmarks
        run: ./bench.sh
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  rustfmt:
    runs-on: ubuntu-22.04
    name: rustfmt + clippy
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.70.0
          components: rustfmt, clippy
          override: true

      - name: cargo fmt
        run: cargo fmt --all -- --check

      - uses: actions-rs/clippy-check@v1
        name: cargo clippy
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
